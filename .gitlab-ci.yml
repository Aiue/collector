stages:
  - package
  - collect
  - upload

include:
  - project: 'DRS/linux-packages/shared-ci-pipeline'
    file: '.upload_rhel-gitlab-ci.yml'
  - project: 'DRS/linux-packages/templated-python-venv/shared-pipelines'
    file: '.el-venv-gitlab-ci.yml'

variables:
  PKG_PREFIX: 'liuopt'
  PKG_VERSION: '1'
  PKG_RELEASE: $CI_PIPELINE_IID

ccc-rhel-opt-package:
  stage: package
  image: 'gitlab.it.liu.se:5000/serverdrift-projs/ci/packaging-images/base/rhel8:latest'
  rules:
    - if: $CI_PIPELINE_SOURCE != "merge_request_event"
  variables:
    PKG_NAME: 'cccollector'
    PKG_INSTALLPATH: '/opt/liu'
    PKG_PROG_VER: '1'
    PKG_SUMMARY: 'Common Crawl Collector'
    PKG_LICENSE: 'GPLv3'
  artifacts:
    paths:
      - pkgs
  script:
    - dnf update
    - rpmbuild --define "_rpmdir $(pwd)/rpms" -bb collector.spec
    - mkdir -p pkgs/rhel8
    - mv rpms/x86_64/*.rpm pkgs/rhel8

pywb-rhel-opt-package:
  extends: .el-venv-opt-package
  rules:
    - if: $CI_PIPELINE_SOURCE != "merge_request_event"
  variables:
    PKG_NAME: 'liuopt-ccc-pywb-venv'
    PKG_INSTALLPATH: 'opt/liu'
    PKG_PROG_VER: '1-1'
    target_distro: rhel8
    build_image: 'gitlab.it.liu.se:5000/serverdrift-projs/ci/packaging-images/base/rhel8:latest'

collect-pkgs:
  stage: collect
  dependencies:
    - ccc-rhel-opt-package
    - pywb-rhel-opt-package
  artifacts:
    untracked: true
  script:
    - "mv pkgs/* ."
    - "find . | grep .rpm"

upload-rhel-pkgs:
  extends: .upload-el-pkgs
  rules:
    - if: $CI_COMMIT_BRANCH == "test"
      variables:
        upload_script: './upload-Ootpa-test.sh'
    - if: $CI_COMMIT_BRANCH == "production"
      variables:
        upload_script: './upload-Ootpa-prod.sh'
  dependencies:
    - collect-pkgs
  variables:
    target_dir: rhel8
